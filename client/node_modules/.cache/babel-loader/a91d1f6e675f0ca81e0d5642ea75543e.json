{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/Spring2022/CIS450/NCVS550/client/src/pages/Pcrime.js\";\nimport React from 'react';\nimport { Form, FormInput, FormGroup, Button, Card, CardBody, CardTitle, Progress } from \"shards-react\";\nimport { Table, Pagination, Select, Row, Col, Divider, Slider, Rate } from 'antd';\nimport { format } from 'd3-format';\nimport MenuBar from '../components/MenuBar';\nimport { relJobVictim } from '../fetcher';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst wideFormat = format('.3r');\nconst {\n  Option\n} = Select;\n\nfunction handleChange(value) {\n  console.log(`selected ${value}`);\n}\n\nclass PcrimePage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      jobResults: []\n    };\n    this.updateSearchResults = this.updateSearchResults.bind(this);\n  }\n\n  handleTimes_movedQueryChange(value) {\n    this.setState({\n      Times_moved_lowQuery: value[0]\n    });\n    this.setState({\n      Times_moved_highQuery: value[1]\n    });\n  }\n\n  updateSearchResults() {\n    relJobVictim().then(res => {\n      this.setState({\n        personsResults: res.results\n      });\n    }); //TASK 23: call getPlayerSearch and update playerResults in state. See componentDidMount() for a hint\n  }\n\n  componentDidMount() {\n    relJobVictim().then(res => {\n      this.setState({\n        jobResults: res.results\n      });\n    });\n  }\n\n  handleChange(value) {\n    console.log(`selected ${value}`);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(MenuBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        defaultValue: \"disabled\",\n        style: {\n          width: 120\n        },\n        onChange: this.handleChange(value),\n        children: [/*#__PURE__*/_jsxDEV(Option, {\n          value: \"race\",\n          children: \"Race\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Option, {\n          value: \"sex\",\n          children: \"Sex\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Option, {\n          value: \"job\",\n          children: \"Job\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Option, {\n          value: \"disabled\",\n          disabled: true,\n          children: \"Disabled\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Option, {\n          value: \"Yiminghe\",\n          children: \"yiminghe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default PcrimePage;","map":{"version":3,"sources":["/Users/apple/Documents/Spring2022/CIS450/NCVS550/client/src/pages/Pcrime.js"],"names":["React","Form","FormInput","FormGroup","Button","Card","CardBody","CardTitle","Progress","Table","Pagination","Select","Row","Col","Divider","Slider","Rate","format","MenuBar","relJobVictim","wideFormat","Option","handleChange","value","console","log","PcrimePage","Component","constructor","props","state","jobResults","updateSearchResults","bind","handleTimes_movedQueryChange","setState","Times_moved_lowQuery","Times_moved_highQuery","then","res","personsResults","results","componentDidMount","render","width"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Form, FormInput, FormGroup, Button, Card, CardBody, CardTitle, Progress } from \"shards-react\";\nimport {\n    Table,\n    Pagination,\n    Select,\n    Row,\n    Col,\n    Divider,\n    Slider,\n    Rate \n} from 'antd'\nimport { format } from 'd3-format';\n\nimport MenuBar from '../components/MenuBar';\nimport { relJobVictim } from '../fetcher'\nconst wideFormat = format('.3r');\nconst { Option } = Select;\nfunction handleChange(value) {\n    console.log(`selected ${value}`);\n}\nclass PcrimePage extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            jobResults: []\n\n        }\n\n        this.updateSearchResults = this.updateSearchResults.bind(this)\n    }\n\n\n\n    handleTimes_movedQueryChange(value) {\n        this.setState({ Times_moved_lowQuery: value[0] })\n        this.setState({ Times_moved_highQuery: value[1] })\n    }\n\n    updateSearchResults() {\n        relJobVictim().then(res => {\n            this.setState({ personsResults: res.results })\n        })\n        //TASK 23: call getPlayerSearch and update playerResults in state. See componentDidMount() for a hint\n    }\n\n    componentDidMount() {\n        relJobVictim().then(res => {\n            this.setState({ jobResults: res.results })\n        })\n    }\n    handleChange(value) {\n        console.log(`selected ${value}`);\n    }\n    render() {\n        return (\n\n            <div>\n\n                <MenuBar />\n                <Select defaultValue=\"disabled\" style={{ width: 120 }} onChange={this.handleChange(value)}>\n                    <Option value=\"race\">Race</Option>\n                    <Option value=\"sex\">Sex</Option>\n                    <Option value=\"job\">Job</Option>\n                    <Option value=\"disabled\" disabled>\n                        Disabled\n                    </Option>\n                    <Option value=\"Yiminghe\">yiminghe</Option>\n                </Select>\n\n\n            </div>\n        )\n    }\n}\n\nexport default PcrimePage"]},"metadata":{},"sourceType":"module"}