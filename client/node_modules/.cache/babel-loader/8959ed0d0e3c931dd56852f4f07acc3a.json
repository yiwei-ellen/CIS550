{"ast":null,"code":"var _jsxFileName = \"/Users/rwu/Desktop/2022 spring/CIS 550/NCVS_project/client/src/pages/Visualization.js\";\nimport React from 'react';\nimport Plot from 'react-plotly.js';\nimport { Form, FormInput, FormGroup, Button, Card, CardBody, CardTitle, Progress } from \"shards-react\";\nimport { FlexibleXYPlot, XAxis, YAxis, VerticalGridLines, HorizontalGridLines, VerticalBarSeries, VerticalBarSeriesCanvas, DiscreteColorLegend } from 'react-vis';\nimport { format } from 'd3-format';\nimport { Table, Pagination, Row, Col, Divider } from 'antd';\nimport { getVisualization1 } from '../fetcher';\nimport MenuBar from '../components/MenuBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Column,\n  ColumnGroup\n} = Table;\nconst wideFormat = format('.3r');\n\nclass VisualizationPage extends React.Component {\n  constructor(props) {\n    super(props); //initial states setup\n\n    this.state = {\n      useCanvas: false,\n      visualization1Results: []\n    };\n  }\n\n  componentDidMount() {\n    getVisualization1().then(res => {\n      this.setState({\n        visualization1Results: res.results\n      });\n    });\n  }\n\n  render() {\n    const {\n      useCanvas\n    } = this.state;\n    const BarSeries = useCanvas ? VerticalBarSeriesCanvas : VerticalBarSeries;\n    var array = [];\n\n    for (const item of this.state.visualization1Results) {\n      console.log(item);\n      array.push(item.Income_bracket);\n    }\n\n    const xValues = array;\n    var array2 = [];\n\n    for (const item of this.state.visualization1Results) {\n      array2.push(item.Weapon_involved);\n    }\n\n    const t1 = array2;\n    var array3 = [];\n\n    for (const item of this.state.visualization1Results) {\n      array3.push(item.No_weapon_involved);\n    }\n\n    const t2 = array3;\n    var array4 = [];\n\n    for (const item of this.state.visualization1Results) {\n      array4.push(item.Do_not_know);\n    }\n\n    const t3 = array4;\n    var array5 = [];\n\n    for (const item of this.state.visualization1Results) {\n      array5.push(item.Other);\n    }\n\n    const t4 = array5;\n    var trace1 = {\n      x: xValues,\n      y: t1,\n      name: 'weapon involved',\n      type: 'bar'\n    };\n    var trace2 = {\n      x: xValues,\n      y: t2,\n      name: 'No weapon involved',\n      type: 'bar'\n    };\n    var trace3 = {\n      x: xValues,\n      y: t3,\n      name: 'Do_not_know',\n      type: 'bar'\n    };\n    var trace4 = {\n      x: xValues,\n      y: t4,\n      name: 'Other',\n      type: 'bar'\n    }; // var data = [trace1, trace2, trace3, trace4];\n    // var layout = {barmode: 'stack'};\n    // Plot.newPlot('myDiv', data, layout);\n\n    console.log(xValues);\n    return /*#__PURE__*/_jsxDEV(Plot, {\n      data: [trace1, trace2, trace3, trace4],\n      layout: {\n        width: 700,\n        height: 400,\n        title: 'A Fancy Plot',\n        barmode: \"stack\",\n        yaxis: {\n          automargin: true\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default VisualizationPage;","map":{"version":3,"sources":["/Users/rwu/Desktop/2022 spring/CIS 550/NCVS_project/client/src/pages/Visualization.js"],"names":["React","Plot","Form","FormInput","FormGroup","Button","Card","CardBody","CardTitle","Progress","FlexibleXYPlot","XAxis","YAxis","VerticalGridLines","HorizontalGridLines","VerticalBarSeries","VerticalBarSeriesCanvas","DiscreteColorLegend","format","Table","Pagination","Row","Col","Divider","getVisualization1","MenuBar","Column","ColumnGroup","wideFormat","VisualizationPage","Component","constructor","props","state","useCanvas","visualization1Results","componentDidMount","then","res","setState","results","render","BarSeries","array","item","console","log","push","Income_bracket","xValues","array2","Weapon_involved","t1","array3","No_weapon_involved","t2","array4","Do_not_know","t3","array5","Other","t4","trace1","x","y","name","type","trace2","trace3","trace4","width","height","title","barmode","yaxis","automargin"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Plot from 'react-plotly.js';\nimport { Form, FormInput, FormGroup, Button, Card, CardBody, CardTitle, Progress } from \"shards-react\";\n\n\nimport {\n    FlexibleXYPlot,\n    XAxis,\n    YAxis,\n    VerticalGridLines,\n    HorizontalGridLines,\n    VerticalBarSeries,\n    VerticalBarSeriesCanvas,\n    DiscreteColorLegend\n  } from 'react-vis';\n\nimport { format } from 'd3-format';\n\n\nimport {\n    Table,\n    Pagination,\n    Row,\n    Col,\n    Divider,\n\n} from 'antd'\n\nimport { getVisualization1 } from '../fetcher'\n\n\nimport MenuBar from '../components/MenuBar';\n\nconst { Column, ColumnGroup } = Table;\nconst wideFormat = format('.3r');\n\n\nclass VisualizationPage extends React.Component {\n    constructor(props) {\n        super(props)\n        //initial states setup\n        this.state = {\n            useCanvas : false,\n            visualization1Results: []\n\n        }\n\n    }\n\n    componentDidMount() {\n        getVisualization1().then(res => {\n            this.setState({ visualization1Results: res.results })\n        })\n        \n    }\n\n\n    render() {\n\n        const {useCanvas} = this.state;\n        const BarSeries = useCanvas ? VerticalBarSeriesCanvas : VerticalBarSeries;\n        var array = [];\n        for (const item of this.state.visualization1Results) {\n            console.log(item);\n            array.push(item.Income_bracket);\n        }\n        const xValues = array;\n\n        var array2 = [];\n        for (const item of this.state.visualization1Results) {\n            array2.push(item.Weapon_involved);\n        }\n        const t1 = array2;\n\n        var array3 = [];\n        for (const item of this.state.visualization1Results) {\n            array3.push(item.No_weapon_involved);\n        }\n        const t2 = array3;\n\n        var array4 = [];\n        for (const item of this.state.visualization1Results) {\n            array4.push(item.Do_not_know);\n        }\n        const t3 = array4;\n\n        var array5 = [];\n        for (const item of this.state.visualization1Results) {\n            array5.push(item.Other);\n        }\n        const t4 = array5;\n\n        var trace1 = {\n            x:xValues,\n            y: t1,\n            name: 'weapon involved',\n            type: 'bar'\n        } ;\n\n        var trace2 = {\n            x:xValues,\n            y: t2,\n            name: 'No weapon involved',\n            type: 'bar'\n        };\n\n        var trace3 = {\n            x:xValues,\n            y: t3,\n            name: 'Do_not_know',\n            type: 'bar'\n        };\n\n        var trace4 = {\n            x: xValues,\n            y: t4,\n            name: 'Other',\n            type: 'bar'\n        };\n\n        // var data = [trace1, trace2, trace3, trace4];\n\n        // var layout = {barmode: 'stack'};\n\n        // Plot.newPlot('myDiv', data, layout);\n        console.log(xValues);\n\n        return (\n            <Plot\n                data={[ trace1, trace2, trace3, trace4\n                ]}\n                layout={ {width: 700, height: 400, title: 'A Fancy Plot', barmode: \"stack\", yaxis: {automargin: true} }}\n          />\n        )\n    }\n}\n\nexport default VisualizationPage\n\n"]},"metadata":{},"sourceType":"module"}